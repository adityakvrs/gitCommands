ls
command used to view other files present along with it

git init
initializing an existing directory as a Git repositor

git clone [url]
retrieve an entire repository from a hosted location via URL

git config --global user.name “[firstname lastname]”
set a name that is identifiable for credit when review version history

git config --global user.email “[valid-email]”
set an email address that will be associated with each history marker

git config --global user.password "[your-password]"
give the password of your Git-Hub inorder to make your GIT-Bash to interact with your GIT-HUB account

git config --global color.ui auto
set automatic command line coloring for Git for easy reviewing

cd "[path-of-folder-containing-the-required-files]"
command used to create git/move git to your required folder so you can add files present in that folder


git status
show modified files in working directory, staged for your next commit

git add [file]
add a file as it looks now to your next commit (stage)

git reset [file]
unstage a file while retaining the changes in working directory

git diff
diff of what is changed but not staged

git diff --staged
diff of what is staged but not yet commited

git commit -m “[descriptive message]”
commit your staged content as a new commit snapshot

git branch
list your branches. a * will appear next to the currently active branch

git branch [branch-name]
create a new branch at the current commit

git checkout
switch to another branch and check it out into your working directory

git merge [branch]
merge the specified branch’s history into the current one

git log
show all commits in the current branch’s history

git remote add origin https://the url of your git-hub repository
this allows GIT-Bash to detect the repository that we are working on

git remote -version
this can be used to know the that whether the repository is allowed for fetch,push and other operations

git fetch [alias]
fetch down all the branches from that Git remote

git push [alias] [branch]
Transmit local branch commits to the remote repository branch

git pull
fetch and merge any commits from the tracking remote branch

git merge [alias]/[branch]
merge a remote branch into your current branch to bring it up to date